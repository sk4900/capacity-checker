{"ast":null,"code":"var _jsxFileName = \"/Users/atharvashivankar/term-project--team-9/capacity-checker/src/App.js\";\nimport React from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport './css/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.colorpicker = status => {\n      const green = \"#5af542\";\n      const yellow = \"#fff23d\";\n      const red = \"#ff2605\";\n\n      if (status == \"red\") {\n        document.getElementById(\"p2\").style.color = red;\n      } else if (status == \"yellow\") {\n        document.getElementById(\"p2\").style.color = yellow;\n      } else {\n        document.getElementById(\"p2\").style.color = green;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"main-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"main-head\",\n        children: \"Room Capacity Checkr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"sub-head\",\n        children: \"Building: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"sub-head\",\n        children: \"Room number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"color-code-head\",\n        children: \"Color code: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"color-code-box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        class: \"color-code-head\",\n        children: \"Occupancy: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"occupancy-pie-chart\",\n        children: /*#__PURE__*/_jsxDEV(PieChart, {\n          animate: true,\n          label: ({\n            dataEntry\n          }) => `${Math.round(dataEntry.percentage)} %`,\n          data: [{\n            title: 'occupied spots',\n            value: 10,\n            color: '#fa0000'\n          }, //occupied\n          {\n            title: 'free spots',\n            value: 15,\n            color: '#3efa00'\n          } //free\n          ]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/atharvashivankar/term-project--team-9/capacity-checker/src/App.js"],"names":["React","PieChart","App","Component","colorpicker","status","green","yellow","red","document","getElementById","style","color","render","dataEntry","Math","round","percentage","title","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAO,iBAAP;;;AAGA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAEhCC,WAFgC,GAEjBC,MAAD,IAAY;AACxB,YAAMC,KAAK,GAAG,SAAd;AACA,YAAMC,MAAM,GAAG,SAAf;AACA,YAAMC,GAAG,GAAG,SAAZ;;AACA,UAAIH,MAAM,IAAI,KAAd,EAAoB;AAClBI,QAAAA,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,KAA9B,CAAoCC,KAApC,GAA4CJ,GAA5C;AACD,OAFD,MAGK,IAAIH,MAAM,IAAI,QAAd,EAAwB;AAC3BI,QAAAA,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,KAA9B,CAAoCC,KAApC,GAA4CL,MAA5C;AACD,OAFI,MAGA;AACHE,QAAAA,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,KAA9B,CAAoCC,KAApC,GAA4CN,KAA5C;AACD;AACF,KAf+B;AAAA;;AAiBhCO,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,8BACE;AAAI,QAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAI,QAAA,KAAK,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAI,QAAA,KAAK,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAI,QAAA,KAAK,EAAC,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cANF,eAQE;AAAI,QAAA,KAAK,EAAC,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAK,QAAA,KAAK,EAAC,qBAAX;AAAA,+BAEE,QAAC,QAAD;AACE,UAAA,OAAO,EAAE,IADX;AAEE,UAAA,KAAK,EAAE,CAAC;AAAEC,YAAAA;AAAF,WAAD,KAAoB,GAAEC,IAAI,CAACC,KAAL,CAAWF,SAAS,CAACG,UAArB,CAAiC,IAFhE;AAGE,UAAA,IAAI,EAAE,CACJ;AAAEC,YAAAA,KAAK,EAAE,gBAAT;AAA2BC,YAAAA,KAAK,EAAE,EAAlC;AAAsCP,YAAAA,KAAK,EAAE;AAA7C,WADI,EACqD;AACzD;AAAEM,YAAAA,KAAK,EAAE,YAAT;AAAuBC,YAAAA,KAAK,EAAE,EAA9B;AAAkCP,YAAAA,KAAK,EAAE;AAAzC,WAFI,CAEkD;AAFlD;AAHR;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AA1C+B;;AA8ClC,eAAeV,GAAf","sourcesContent":["import React from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport './css/style.css';\n\n\nclass App extends React.Component {\n\n  colorpicker = (status) => {\n    const green = \"#5af542\";\n    const yellow = \"#fff23d\";\n    const red = \"#ff2605\";\n    if (status == \"red\"){\n      document.getElementById(\"p2\").style.color = red;\n    }\n    else if (status == \"yellow\") {\n      document.getElementById(\"p2\").style.color = yellow;\n    }\n    else {\n      document.getElementById(\"p2\").style.color = green;\n    }\n  } \n\n  render() {\n\n    return (\n      <div class=\"main-page\">\n        <h1 id=\"main-head\">Room Capacity Checkr</h1>\n\n        <h2 class=\"sub-head\">Building: </h2>\n        <h2 class=\"sub-head\">Room number: </h2>\n        <h2 class=\"color-code-head\">Color code: </h2>\n        <div id=\"color-code-box\" ></div>\n\n        <h2 class=\"color-code-head\">Occupancy: </h2>\n        <div class=\"occupancy-pie-chart\">\n\n          <PieChart \n            animate={true}\n            label={({ dataEntry }) => `${Math.round(dataEntry.percentage)} %`}\n            data={[\n              { title: 'occupied spots', value: 10, color: '#fa0000'}, //occupied\n              { title: 'free spots', value: 15, color: '#3efa00' }, //free\n            ]}\n          />\n        </div> \n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}