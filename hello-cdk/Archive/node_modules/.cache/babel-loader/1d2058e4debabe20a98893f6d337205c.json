{"ast":null,"code":"var _jsxFileName = \"/Users/atharvashivankar/term-project--team-9/capacity-checker/src/App.js\";\nimport React from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport './css/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      status: null,\n      //status_code: null,\n      room_number: null,\n      building_number: null,\n      max_capacity: null,\n      curr_capacity: null\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://ndrk5oitte.execute-api.us-east-1.amazonaws.com/prod/\";\n    const response = await fetch(url);\n    var data = await response.json();\n    this.interval = setInterval(() => {\n      this.setState({\n        //status_code: data.status_code,\n        building_number: data.building_number,\n        room_number: data.room_number,\n        max_capacity: data.max_capacity,\n        curr_capacity: data.curr_capacity,\n        status: data.status\n      });\n    }, 50);\n    console.log(data.status);\n    console.log(data.max_capacity);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  colorpicker() {\n    let green = \"#5af542\";\n    let yellow = \"#fff23d\";\n    let red = \"#ff2605\";\n\n    if (this.state.status == \"red\") {\n      return red;\n    } else if (this.state.status === \"yellow\") {\n      return yellow;\n    } else {\n      return green;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"main-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"main-head\",\n          children: \"Room Capacity Checkr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"sub-head\",\n          children: [\"Building: \", this.state.building_number, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"sub-head\",\n          children: [\"Room number:  \", this.state.room_number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"color-code-head\",\n          children: \"Color code: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"color-code-box\",\n          style: {\n            backgroundColor: this.colorpicker()\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"color-code-head\",\n          children: [\"Current Occupancy: \", this.state.curr_capacity, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"color-code-head\",\n          children: [\"Max Occupancy: \", this.state.max_capacity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"occupancy-pie-chart\",\n          children: /*#__PURE__*/_jsxDEV(PieChart, {\n            animate: true,\n            label: ({\n              dataEntry\n            }) => `${Math.round(dataEntry.percentage)} %`,\n            data: [{\n              title: 'Occupied spots',\n              value: parseInt(this.state.curr_capacity),\n              color: '#fa0000'\n            }, //occupied\n            {\n              title: 'Free spots',\n              value: parseInt(this.state.max_capacity),\n              color: '#3efa00'\n            } //free\n            ]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/atharvashivankar/term-project--team-9/capacity-checker/src/App.js"],"names":["React","PieChart","App","Component","state","status","room_number","building_number","max_capacity","curr_capacity","componentDidMount","url","response","fetch","data","json","interval","setInterval","setState","console","log","componentWillUnmount","clearInterval","colorpicker","green","yellow","red","render","backgroundColor","dataEntry","Math","round","percentage","title","value","parseInt","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport './css/style.css';\n\n\nexport default class App extends React.Component {\n\n  state = {\n    status: null,\n    //status_code: null,\n    room_number: null,\n    building_number: null,\n    max_capacity: null,\n    curr_capacity: null\n  };\n\n  async componentDidMount() {\n    \n    const url = \"https://ndrk5oitte.execute-api.us-east-1.amazonaws.com/prod/\";\n    \n    const response = await fetch(url);\n\n    var data = await response.json();\n    \n    this.interval = setInterval(() => {\n        this.setState({\n          //status_code: data.status_code,\n          building_number: data.building_number, \n          room_number: data.room_number,\n          max_capacity: data.max_capacity,\n          curr_capacity: data.curr_capacity,\n          status: data.status\n        });\n    }, 50);\n  \n    console.log(data.status);\n    console.log(data.max_capacity);\n \n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n\n  colorpicker () {\n    let green = \"#5af542\";\n    let yellow = \"#fff23d\";\n    let red = \"#ff2605\";\n\n    if (this.state.status == \"red\"){\n      return red;\n    }\n    else if (this.state.status === \"yellow\") {\n      return yellow;\n    }\n    else {\n      return green;\n    }\n\n  } \n\n\n\n  render() {\n\n    return (\n\n      <div>\n\n        \n        <div class=\"main-page\">\n          <h1 id=\"main-head\">Room Capacity Checkr</h1>\n\n          <h2 class=\"sub-head\">Building: {this.state.building_number} </h2>\n          <h2 class=\"sub-head\">Room number:  {this.state.room_number}</h2>\n          <h2 class=\"color-code-head\">Color code: </h2>\n\n          <div id=\"color-code-box\" style={{backgroundColor: this.colorpicker()}} ></div>\n\n          <h2 class=\"color-code-head\">Current Occupancy: {this.state.curr_capacity} </h2> \n          <h2 class=\"color-code-head\">Max Occupancy: {this.state.max_capacity}</h2> \n          \n\n          <div class=\"occupancy-pie-chart\">\n            <PieChart \n              animate={true}\n              label={({ dataEntry }) => `${Math.round(dataEntry.percentage)} %`}\n              data={[\n                { title: 'Occupied spots', value: parseInt(this.state.curr_capacity), color: '#fa0000'}, //occupied\n                { title: 'Free spots', value: parseInt(this.state.max_capacity), color: '#3efa00' }, //free\n              ]}\n            />\n          </div>\n        </div>\n        \n\n      </div>\n\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}